---
const { school, language } = Astro.props;

import Flutter from '../svg/tech/Flutter.astro';
import Firebase from '../svg/tech/Firebase.astro';
import Dart from '../svg/tech/Dart.astro';

const technologyComponents = {
    'Dart': Dart,
    'Flutter': Flutter,
    'Firebase': Firebase,
};
---

<div class="card education-card">
    <div class="card2" data-bg-image={school.image}>
        <div class="image-container">
            <img src={school.image} alt={`Imagen de ${school.title[language]}`} />
        </div>
        <div class="info-container">
            <div class="content">
                <h2 class="card-title" 
                   data-spanish-title={school.title.spanish} 
                   data-english-title={school.title.english}>
                    {school.title[language]}
                </h2>
                <h3 class="card-subtitle" 
                   data-spanish-subtitle={school.subtitle.spanish} 
                   data-english-subtitle={school.subtitle.english}>
                    {school.subtitle[language]}
                </h3>
                <p class="period card-period" 
                   data-spanish-period={school.period.spanish} 
                   data-english-period={school.period.english}>
                    {school.period[language]}
                </p>
                <p class="description card-description" 
                   data-spanish-description={school.description.spanish} 
                   data-english-description={school.description.english}>
                    {school.description[language]}
                </p>
                <hr class="divider" />
            </div>
        </div>
    </div>
</div>

<script>
    // Actualizar cuando cambia el idioma
    document.addEventListener('languageChanged', (event) => {
        if (event instanceof CustomEvent && event.detail && event.detail.language) {
            updateEducationCards(event.detail.language);
        }
    });

    // Inicializar con el idioma actual
    document.addEventListener('DOMContentLoaded', () => {
        const currentLanguage = localStorage.getItem('language') || 'spanish';
        updateEducationCards(currentLanguage);
        
        // Configurar imagen de fondo para móvil
        setupMobileBackground();
    });

    // Función para configurar la imagen de fondo en móvil
    function setupMobileBackground() {
        const isMobile = window.innerWidth <= 768;
        
        if (isMobile) {
            document.querySelectorAll('.card2[data-bg-image]').forEach(card => {
                const htmlCard = card as HTMLElement;
                const bgImage = htmlCard.getAttribute('data-bg-image');
                if (bgImage) {
                    htmlCard.style.backgroundImage = `url(${bgImage})`;
                    htmlCard.style.backgroundSize = 'cover';
                    htmlCard.style.backgroundPosition = 'center';
                    htmlCard.style.backgroundRepeat = 'no-repeat';
                }
            });
        }
    }

    // Configurar imagen de fondo cuando se redimensiona la ventana
    window.addEventListener('resize', () => {
        setupMobileBackground();
    });

    // Función para actualizar las tarjetas de educación
    function updateEducationCards(language) {
        // Actualizar títulos
        document.querySelectorAll('.card-title').forEach(element => {
            const spanishTitle = element.getAttribute('data-spanish-title');
            const englishTitle = element.getAttribute('data-english-title');
            
            if (language === 'spanish' && spanishTitle) {
                element.textContent = spanishTitle;
            } else if (language === 'english' && englishTitle) {
                element.textContent = englishTitle;
            }
        });
        
        // Actualizar subtítulos
        document.querySelectorAll('.card-subtitle').forEach(element => {
            const spanishSubtitle = element.getAttribute('data-spanish-subtitle');
            const englishSubtitle = element.getAttribute('data-english-subtitle');
            
            if (language === 'spanish' && spanishSubtitle) {
                element.textContent = spanishSubtitle;
            } else if (language === 'english' && englishSubtitle) {
                element.textContent = englishSubtitle;
            }
        });
        
        // Actualizar periodos
        document.querySelectorAll('.card-period').forEach(element => {
            const spanishPeriod = element.getAttribute('data-spanish-period');
            const englishPeriod = element.getAttribute('data-english-period');
            
            if (language === 'spanish' && spanishPeriod) {
                element.textContent = spanishPeriod;
            } else if (language === 'english' && englishPeriod) {
                element.textContent = englishPeriod;
            }
        });
        
        // Actualizar descripciones
        document.querySelectorAll('.card-description').forEach(element => {
            const spanishDesc = element.getAttribute('data-spanish-description');
            const englishDesc = element.getAttribute('data-english-description');
            
            if (language === 'spanish' && spanishDesc) {
                element.textContent = spanishDesc;
            } else if (language === 'english' && englishDesc) {
                element.textContent = englishDesc;
            }
        });
    }
</script>

<style>
    
    .card {
        width: 1200px;
        height: auto;
        background-image: linear-gradient(163deg, var(--special-border-color) 0%, #264edf 100%);
        border-radius: 40px;
        transition: all 0.3s;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .card2 {
        width: 100%;
        height: 100%;
        background-color: var(--card-color);
        border-radius: 20px;
        transition: all 0.2s;
        display: flex;
        overflow: hidden;
        position: relative;
    }

    .card2:hover {
        transform: scale(0.99);
        border-radius: 40px;
    }

    .card:hover {
        box-shadow: 0px 0px 30px 1px rgba(45, 110, 213, 0.3);
    }

    .image-container {
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .image-container img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .info-container {
        flex: 2;
        padding: 15px;
        color: var(--text-color);
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        height: 100%; 
        position: relative;
        z-index: 2;
    }

    h2 {
        color: #4173E6;
        font-size: 2em;
        margin-bottom: 5px; 
    }

    h3 {
        color: #4173E6;
        font-size: 1.5em;
        opacity: 0.75;
        margin-bottom: 5px;
    }

    .period {
        font-size: 1em;
        opacity: 0.55;
        margin-bottom: 15px; 
    }

    .description {
        font-size: 16px;
        line-height: 2;
        margin-bottom: 1rem;
    }

    .divider {
        border: 0;
        height: 1px;
        background-image: linear-gradient(to right, transparent, var(--text-color), transparent);
    }

    .technologies {
        position: relative;
        width: calc(100% - 650px);
        display: flex;
        justify-content: center; 
        align-items: center;
        gap: 10px;
        flex-direction: row;
        max-height: 40px; 
    }

    @media (max-width: 768px) {
        .card {
            width: 95%;
            padding: 3px; 
        }

        .card2 {
            border-radius: 40px;
            position: relative;
        }

        .card2::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.7);
            z-index: 1;
        }

        .card2:hover {
            transform: scale(1);
            border-radius: 40px;
        }

        .image-container {
            display: none;
        }

        .info-container {
            padding: 25px 5px;
            width: 100%;
            position: relative;
            z-index: 2;
        }

        h2, h3, .period, .description {
            text-align: center;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
        }

        h2 {
            font-size: 1em;
            margin-bottom: 5px;
            color: #5680E1;
            font-weight: bold;
        }

        h3 {
            font-size: .75em;
            margin-bottom: 5px;
            color: #7ba3ff;
            font-weight: 600;
        }

        .period {
            font-size: .65em;
            margin-bottom: 15px;
            color: var(--text-color);
            opacity: 0.9;
        }

        .description {
            font-size: .75em;
            line-height: 2;
            margin-bottom: 1rem;
            color: var(--text-color);
            font-weight: 500;
        }

        .divider {
            margin: 10px 0;
            background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.6), transparent);
        }
    }

</style>
